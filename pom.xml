<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>


    <groupId>com.sboot.test</groupId>
    <artifactId>sboot-test-service-parent</artifactId>
    <version>1.0.0-SNAPSHOT</version>

    <packaging>pom</packaging>

    <name>sboot-test-service - parent</name>

    <modules>
        <module>sboot-test-service-repository</module>
        <module>sboot-test-service</module>
    </modules>


  <properties>
      <junit.version>4.12</junit.version>
      <mockito.version>1.10.19</mockito.version>
      <activemq-junit.version>5.13.4</activemq-junit.version>
      <springboot-test.version>1.4.5.RELEASE</springboot-test.version>
      <spring-test.version>4.3.7.RELEASE</spring-test.version>
      <commons-loggin.version>1.2</commons-loggin.version>
      <sonar.cobertura.reportPath>target/site/cobertura/coverage.xml</sonar.cobertura.reportPath>
      <sonar.java.coveragePlugin>cobertura</sonar.java.coveragePlugin>
      <sonar-maven-plugin.version>2.7.1</sonar-maven-plugin.version>
      <!-- Internal dependencies -->
      <java.version>1.8</java.version>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
      <maven.compiler.source>1.8</maven.compiler.source>
      <maven.compiler.target>1.8</maven.compiler.target>
      <!-- 3rd party dependencies -->
      <spring-boot.version>1.5.6.RELEASE</spring-boot.version>
      <spring-cloud.version>Dalston.SR2</spring-cloud.version>
      <spring-retry.version>1.2.0.RELEASE</spring-retry.version>
      <spring-boot-admin.version>1.4.5</spring-boot-admin.version>
      <guava.version>20.0</guava.version>
      <javax.validation.api>1.1.0.Final</javax.validation.api>
      <commons.lang.version>2.6</commons.lang.version>
      <apache-commons.version>3.5</apache-commons.version>
      <json2pojo.version>0.4.23</json2pojo.version>
      <maven-resources-plugin.version>3.0.2</maven-resources-plugin.version>
      <docker-maven-plugin.version>0.4.13</docker-maven-plugin.version>
      <oracle.version>11.2.0.4</oracle.version>

      <!-- org.springframework.boot:spring-boot-maven-plugin -->
      <spring-boot-maven-plugin.version>1.4.3.RELEASE</spring-boot-maven-plugin.version>
  </properties>

  <dependencyManagement>
    <dependencies>
        <!-- Spring Boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-parent</artifactId>
            <version>${spring-boot.version}</version>
            <type>pom</type>
            <scope>import</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-actuator</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>



        <!-- Spring Cloud -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-dependencies</artifactId>
            <version>${spring-cloud.version}</version>
            <type>pom</type>
            <scope>import</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.retry</groupId>
            <artifactId>spring-retry</artifactId>
            <version>${spring-retry.version}</version>
        </dependency>



        <!-- third party -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>${commons.lang.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>${javax.validation.api}</version>
        </dependency>

        <!-- data base -->
        <dependency>
            <groupId>com.oracle</groupId>
            <artifactId>ojdbc6</artifactId>
            <version>${oracle.version}</version>
        </dependency>
      <dependency>
        <groupId>com.sboot.test</groupId>
        <artifactId>sboot-test-service-repository</artifactId>
        <version>1.0.0-SNAPSHOT</version>
      </dependency>
      <dependency>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
          <scope>test</scope>
          <version>${junit.version}</version>
      </dependency>
      <dependency>
          <groupId>org.mockito</groupId>
          <artifactId>mockito-all</artifactId>
          <scope>test</scope>
          <version>${mockito.version}</version>
      </dependency>
      <dependency>
          <groupId>org.apache.activemq.tooling</groupId>
          <artifactId>activemq-junit</artifactId>
          <version>${activemq-junit.version}</version>
          <scope>test</scope>
      </dependency>
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-test</artifactId>
          <version>${spring-test.version}</version>
          <scope>test</scope>
      </dependency>
      <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-test</artifactId>
          <version>${springboot-test.version}</version>
          <scope>test</scope>
      </dependency>
      <dependency>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
          <version>${commons-loggin.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <!--To generate javadoc execute mvn javadoc:aggregate-->
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <!-- remove syntax checks to allow the ampersand of 'Giesecke & Devrient' -->
                    <additionalparam>-Xdoclint:html,missing,accessibility,reference</additionalparam>
                </configuration>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>3.2</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>


</project>